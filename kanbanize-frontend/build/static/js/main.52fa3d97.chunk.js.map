{"version":3,"sources":["components/kkForm.js","actions/boardActions.js","actions/KKListActions.js","actions/KKCardActions.js","actions/index.js","components/kkButton.js","components/kkCard.js","components/kkAddNewButton.js","components/kkCreate.js","components/kkList.js","components/kkBoard.js","components/home.js","components/navbar.js","components/App.js","serviceWorker.js","reducers/boardReducer.js","reducers/currentBoardReducer.js","reducers/listReducer.js","reducers/cardReducer.js","reducers/index.js","store/index.js","index.js"],"names":["Container","styled","div","StyledCard","Card","StyledTextarea","Textarea","ButtonContainer","StyledIcon","Icon","KKForm","React","memo","list","text","onChange","closeForm","children","placeholder","autoFocus","onFocus","e","target","select","onBlur","value","onMouseDown","setCurrentBoard","boardID","type","CONSTANTS","SET_CURRENT_BOARD","payload","addList","listTitle","dispatch","getState","ADD_LIST","currentBoard","listID","uuid","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","ADD_CARD","cardID","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","ADD_BOARD","DELETE_BOARD","StyledButton","Button","KKButton","onClick","variant","CardContainer","EditButton","DeleteButton","KKCard","id","index","useState","editMode","setEditMode","cardText","setText","eraseCard","deleteCard","console","log","preventDefault","newText","editCard","post","then","response","String","provided","ref","innerRef","draggableProps","dragHandleProps","onDoubleClick","fontSize","CardContent","Typography","connect","KKAddNewButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","StyledAddNewButton","style","flexShrink","ListContainer","KKCreate","state","formOpen","openForm","setState","handleListInputChange","length","handleCardInputChange","handleAddList","props","handleAddCard","this","Component","StyledInput","input","TitleContainer","ListTitle","h4","KKList","title","cards","setListTitle","handleFocus","handleChange","handleCloseEdit","newListTitle","editListTitle","handleDeleteList","deleteList","droppableId","droppableProps","map","card","key","CreateTitle","h3","KKBoard","onDragEnd","result","destination","source","match","params","lists","board","boards","textAlign","listOrder","boardTitle","direction","listCards","HomeContainer","Thumbnails","Thumbnail","Title","CreateInput","CreateButton","button","newBoardTitle","setNewBoardTitle","handleSubmit","handleDeleteBoard","deleteBoard","Object","entries","href","width","height","display","textDecoration","justifyContent","alignItems","className","zIndex","onSubmit","Navbar","backgroundColor","boxShadow","borderRadius","padding","App","minHeight","minWidth","overflowY","overflowX","background","marginTop","path","component","Home","from","to","Boolean","window","location","hostname","initialState","boardReducer","action","newBoard","push","newLists","filter","draggedList","splice","currentBoardReducer","listReducer","newList","newState","newCards","startList","endList","cardReducer","newCard","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","ReactDOM","render","loading","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.52fa3d97.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card, Button, Icon } from \"@material-ui/core\";\r\nimport Textarea from \"react-textarea-autosize\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextarea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst KKForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    const handleFocus = (e) => {\r\n      e.target.select();\r\n    };\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextarea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            onFocus={handleFocus}\r\n            onBlur={closeForm}\r\n            value={text}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default KKForm;\r\n","import { CONSTANTS } from './index';\r\nimport uuid from 'react-uuid';\r\n\r\nexport const addBoard = (boardTitle) => {\r\n\treturn {\r\n\t\ttype: CONSTANTS.ADD_BOARD,\r\n\t\tpayload: {\r\n\t\t\tboardTitle,\r\n\t\t\tboardID: uuid(),\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const deleteBoard = (boardID) => {\r\n\treturn {\r\n\t\ttype: CONSTANTS.DELETE_BOARD,\r\n\t\tpayload: {\r\n\t\t\tboardID,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const setCurrentBoard = (boardID) => {\r\n\treturn {\r\n\t\ttype: CONSTANTS.SET_CURRENT_BOARD,\r\n\t\tpayload: {\r\n\t\t\tboardID,\r\n\t\t},\r\n\t};\r\n};\r\n","import { CONSTANTS } from \"./index\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const addList = (listTitle) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: CONSTANTS.ADD_LIST,\r\n      payload: {\r\n        listTitle,\r\n        boardID: getState().currentBoard.boardID,\r\n        listID: uuid(),\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const editListTitle = (listID, newListTitle) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_LIST_TITLE,\r\n    payload: {\r\n      listID,\r\n      newListTitle,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (listID) => {\r\n  return (dispatch, getState) => {\r\n    return dispatch({\r\n      type: CONSTANTS.DELETE_LIST,\r\n      payload: {\r\n        listID,\r\n        boardID: getState().currentBoard.boardID,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: CONSTANTS.DRAG_HAPPENED,\r\n      payload: {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type,\r\n        boardID: getState().currentBoard.boardID,\r\n      },\r\n    });\r\n  };\r\n};\r\n","import { CONSTANTS } from \"./index\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID, cardID: uuid() },\r\n  };\r\n};\r\n\r\nexport const editCard = (cardID, listID, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: { cardID, listID, newText },\r\n  };\r\n};\r\n\r\nexport const deleteCard = (cardID, listID) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: { cardID, listID },\r\n  };\r\n};\r\n","export * from \"./boardActions\";\r\nexport * from \"./KKListActions\";\r\nexport * from \"./KKCardActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n  DELETE_LIST: \"DELETE_LIST\",\r\n  ADD_BOARD: \"ADD_BOARD\",\r\n  DELETE_BOARD: \"DELETE_BOARD\",\r\n  SET_CURRENT_BOARD: \"SET_CURRENT_BOARD\",\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst KKButton = ({ text, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default KKButton;\r\n","import React, { useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Card, CardContent, Icon } from '@material-ui/core';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport KKForm from './kkForm';\r\nimport { editCard, deleteCard } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport KKButton from './kkButton';\r\nimport { post } from 'axios';\r\n\r\nconst CardContainer = styled.div`\r\n\tmargin: 0 0 8px 0;\r\n\tposition: relative;\r\n\tmax-width: 100%;\r\n\tword-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n\tposition: absolute;\r\n\tdisplay: none;\r\n\tright: 5px;\r\n\ttop: 5px;\r\n\topacity: 0.5;\r\n\t${CardContainer}:hover & {\r\n\t\tdisplay: block;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t&:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n\tposition: absolute;\r\n\tdisplay: none;\r\n\tright: 5px;\r\n\tbottom: 5px;\r\n\topacity: 0.5;\r\n\t${CardContainer}:hover & {\r\n\t\tdisplay: block;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t&:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n`;\r\n\r\nconst KKCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [cardText, setText] = useState(text);\r\n\r\n\tconst closeForm = (e) => {\r\n\t\tsetEditMode(false);\r\n\t\tsetText(text);\r\n\t};\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetText(e.target.value);\r\n\t\tconsole.log(e.target.value);\r\n\t};\r\n\r\n\tconst saveCard = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(editCard(id, listID, cardText));\r\n\t\tconsole.log(cardText);\r\n\t\tif (cardText) {\r\n\t\t\tpost(\r\n\t\t\t\t'https://kanbanize-hack.herokuapp.com/dashboard/dashboard/inprogress',\r\n\t\t\t\t'name=' + cardText\r\n\t\t\t).then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetEditMode(false);\r\n\t};\r\n\r\n\tconst eraseCard = (e) => {\r\n\t\tdispatch(deleteCard(id, listID));\r\n\t};\r\n\r\n\tif (editMode)\r\n\t\treturn (\r\n\t\t\t<KKForm\r\n\t\t\t\ttext={cardText}\r\n\t\t\t\tsetText={setText}\r\n\t\t\t\tcloseForm={closeForm}\r\n\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t<KKButton text=\"Save\" onClick={saveCard}></KKButton>\r\n\t\t\t</KKForm>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Draggable draggableId={String(id)} index={index}>\r\n\t\t\t{(provided) => (\r\n\t\t\t\t<CardContainer\r\n\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\tonDoubleClick={() => setEditMode(true)}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<EditButton fontSize=\"small\" onMouseDown={() => setEditMode(true)}>\r\n\t\t\t\t\t\t\tedit\r\n\t\t\t\t\t\t</EditButton>\r\n\t\t\t\t\t\t<DeleteButton fontSize=\"small\" onMouseDown={eraseCard}>\r\n\t\t\t\t\t\t\tdelete\r\n\t\t\t\t\t\t</DeleteButton>\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t<Typography>{text}</Typography>\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</CardContainer>\r\n\t\t\t)}\r\n\t\t</Draggable>\r\n\t);\r\n});\r\n\r\nexport default connect()(KKCard);\r\n","import React from \"react\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst KKAddNewButton = ({ list, onClick }) => {\r\n  const buttonText = list ? \"Add a new list\" : \"Add a new card\";\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n  const StyledAddNewButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    width: 270px;\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n    <StyledAddNewButton onClick={onClick}>\r\n      <Icon>add</Icon>\r\n      <span style={{ flexShrink: 0 }}> {buttonText}</span>\r\n    </StyledAddNewButton>\r\n  );\r\n};\r\n\r\nexport default KKAddNewButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport KKForm from \"./kkForm\";\r\nimport KKButton from \"./kkButton\";\r\nimport KKAddNewButton from \"./kkAddNewButton\";\r\nimport { addList, addCard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ListContainer = styled.div`\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  height: 100%;\r\n  margin-right: 8px;\r\n`;\r\n\r\nclass KKCreate extends Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\",\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({ formOpen: true });\r\n  };\r\n\r\n  closeForm = (e) => {\r\n    this.setState({ formOpen: false, text: \"\" });\r\n  };\r\n\r\n  handleListInputChange = (e) => {\r\n    if (e.target.value.length <= 20) this.setState({ text: e.target.value });\r\n  };\r\n  handleCardInputChange = (e) => {\r\n    if (e.target.value.length <= 150) this.setState({ text: e.target.value });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addList(text));\r\n    }\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, formOpen } = this.state;\r\n    const { list } = this.props;\r\n\r\n    if (list) {\r\n      if (formOpen)\r\n        return (\r\n          <ListContainer>\r\n            <KKForm\r\n              text={text}\r\n              onChange={this.handleListInputChange}\r\n              closeForm={this.closeForm}\r\n            >\r\n              <KKButton text=\"Add List\" onClick={this.handleAddList}></KKButton>\r\n            </KKForm>\r\n          </ListContainer>\r\n        );\r\n      else\r\n        return (\r\n          <ListContainer>\r\n            <KKAddNewButton list={list} onClick={this.openForm} />\r\n          </ListContainer>\r\n        );\r\n    } else {\r\n      if (formOpen)\r\n        return (\r\n          <KKForm\r\n            text={text}\r\n            onChange={this.handleCardInputChange}\r\n            closeForm={this.closeForm}\r\n          >\r\n            <KKButton text=\"Add Card\" onClick={this.handleAddCard}></KKButton>\r\n          </KKForm>\r\n        );\r\n      else return <KKAddNewButton list={list} onClick={this.openForm} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect()(KKCreate);\r\n","import React, { useState } from \"react\";\r\nimport KKCard from \"./kkCard\";\r\nimport KKCreate from \"./kkCreate\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editListTitle, deleteList, deleteCard } from \"../actions\";\r\nimport { Icon } from \"@material-ui/core\";\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  height: 100%;\r\n  padding: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  display: none;\r\n  opacity: 0.5;\r\n  ${TitleContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst KKList = React.memo(({ title, cards, listID, index, dispatch }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  const handleFocus = (e) => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value.length <= 20) setListTitle(e.target.value);\r\n  };\r\n\r\n  const handleCloseEdit = (e) => {\r\n    setEditMode(false);\r\n    dispatch(editListTitle(listID, listTitle));\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    //console.log(\"KKList: delete list: \", listID);\r\n    dispatch(deleteList(listID));\r\n  };\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <StyledInput\r\n        type=\"text\"\r\n        value={listTitle}\r\n        onChange={handleChange}\r\n        autoFocus\r\n        onFocus={handleFocus}\r\n        onBlur={handleCloseEdit}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {(provided) => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Droppable droppableId={String(listID)} type=\"card\">\r\n            {(provided) => (\r\n              <div>\r\n                <div>\r\n                  {editMode ? (\r\n                    renderEditInput()\r\n                  ) : (\r\n                    <TitleContainer onClick={() => setEditMode(true)}>\r\n                      <ListTitle>{listTitle}</ListTitle>\r\n                      <DeleteButton onClick={handleDeleteList}>\r\n                        delete\r\n                      </DeleteButton>\r\n                    </TitleContainer>\r\n                  )}\r\n                </div>\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {cards.map((card, index) => (\r\n                    <KKCard\r\n                      key={card.cardID}\r\n                      index={index}\r\n                      text={card.text}\r\n                      id={card.cardID}\r\n                      listID={listID}\r\n                    />\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  <KKCreate listID={listID} />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n});\r\n\r\nexport default connect()(KKList);\r\n","import React, { Component } from \"react\";\r\nimport KKList from \"./kkList\";\r\nimport { connect } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sort, setCurrentBoard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport KKCreate from \"./kkCreate\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst CreateTitle = styled.h3`\r\n  width: 100%;\r\n  font-size: 40px;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  margin-top: 55px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nclass KKBoard extends Component {\r\n  componentDidMount() {\r\n    const { boardID } = this.props.match.params;\r\n    this.props.dispatch(setCurrentBoard(boardID));\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n    if (!destination) return;\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { lists, cards, match, boards } = this.props;\r\n    const { boardID } = match.params;\r\n    const board = boards[boardID];\r\n    if (!board)\r\n      return <h1 style={{ textAlign: \"center\" }}>Board not found!</h1>;\r\n\r\n    const listOrder = board.lists;\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <CreateTitle>{board.boardTitle}</CreateTitle>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {(provided) => (\r\n            <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\r\n              {listOrder.map((listID, index) => {\r\n                const list = lists[listID];\r\n                if (list) {\r\n                  const listCards = list.cards.map((cardID) => cards[cardID]);\r\n                  return (\r\n                    <KKList\r\n                      key={list.listID}\r\n                      listID={list.listID}\r\n                      title={list.listTitle}\r\n                      cards={listCards}\r\n                      index={index}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n              {provided.placeholder}\r\n              <KKCreate list />\r\n            </ListContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boards: state.boards,\r\n  currentBoard: state.currentBoard,\r\n  lists: state.lists,\r\n  cards: state.cards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(KKBoard);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addBoard, deleteBoard, setCurrentBoard } from '../actions';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Icon } from '@material-ui/core';\r\n\r\nconst HomeContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tbox-sizing: border-box;\r\n`;\r\n\r\nconst Thumbnails = styled.div`\r\n\tflex: 1;\r\n\theight: 50%;\r\n\tmargin: 0 auto;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst Thumbnail = styled.div`\r\n\theight: 4em;\r\n\twidth: 200px;\r\n\tbackground: #175160;\r\n\tpadding: 25px;\r\n\tmargin: 20px;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n\tborder-radius: 50px;\r\n\tbox-shadow: 0 2px 4px black;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n\tcolor: white;\r\n\tpadding-top: 5px;\r\n\ttext-decoration: none;\r\n\topacity: 1;\r\n\t${Thumbnail}:hover & {\r\n\t\tdisplay: block;\r\n\t\tcursor: pointer;\r\n\t\topacity: 1;\r\n\t\ttext-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #0073e6, 0 0 20px #0073e6,\r\n\t\t\t0 0 25px #0073e6, 0 0 30px #0073e6, 0 0 35px #0073e6;\r\n\t}\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n\tdisplay: block;\r\n\tpadding: 20%;\r\n\tcolor: white;\r\n\topacity: 0.3;\r\n\t${Thumbnail}:hover & {\r\n\t\tdisplay: block;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t&:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n`;\r\n\r\nconst CreateTitle = styled.h3`\r\n\tfont-size: 50px;\r\n\tcolor: #f5f5f5;\r\n\tfont-weight: bold;\r\n\tfont-family: Arial, Helvetica, sans-serif;\r\n\tpadding: 10px;\r\n\tmargin-top: 25px;\r\n`;\r\n\r\nconst CreateInput = styled.input`\r\n\twidth: 300px;\r\n\theight: 50px;\r\n\tfont-size: 20px;\r\n\tpadding: 10px;\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 30px;\r\n\tborder: none;\r\n\toutline: none;\r\n\tbox-shadow: 0 2px 4px grey;\r\n\talign-self: center;\r\n`;\r\n\r\n//#2e7196; b0c4de;008B8B;2F4F4F\r\nconst CreateButton = styled.button`\r\n\twidth: 120px;\r\n\theight: 50px;\r\n\tbackground-color: #175160;\r\n\tcolor: white;\r\n\tfont-size: 17px;\r\n\tpadding: 10px;\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 30px;\r\n\tborder: none;\r\n\toutline: none;\r\n\talign-self: center;\r\n\tmargin: 10px;\r\n\t&:hover {\r\n\t\ttext-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #0073e6, 0 0 20px #0073e6,\r\n\t\t\t0 0 25px #0073e6, 0 0 30px #0073e6, 0 0 35px #0073e6;\r\n\t}\r\n`;\r\n\r\nconst Home = ({ boards, dispatch, match }) => {\r\n\tdispatch(setCurrentBoard(null));\r\n\tconst [newBoardTitle, setNewBoardTitle] = useState('');\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tif (e.target.value.length < 14) setNewBoardTitle(e.target.value);\r\n\t};\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(addBoard(newBoardTitle));\r\n\t\tsetNewBoardTitle('');\r\n\t};\r\n\r\n\tconst handleDeleteBoard = (e, boardID) => {\r\n\t\tdispatch(deleteBoard(boardID));\r\n\t};\r\n\r\n\tconst renderAllBoards = () => {\r\n\t\treturn Object.entries(boards).map(([boardID, board]) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Thumbnail>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref={`#/boards/${boardID}`}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\ttextDecoration: 'none',\r\n\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Title>{board.boardTitle}</Title>\r\n\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t<div className=\"col-1\">\r\n\t\t\t\t\t\t<DeleteButton\r\n\t\t\t\t\t\t\tstyle={{ zIndex: '10' }}\r\n\t\t\t\t\t\t\tonClick={(e) => handleDeleteBoard(e, boardID)}>\r\n\t\t\t\t\t\t\tdelete\r\n\t\t\t\t\t\t</DeleteButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Thumbnail>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tconst renderCreateNewBoard = () => {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={handleSubmit} style={{ textAlign: 'center' }}>\r\n\t\t\t\t<CreateTitle>Make your own Kanban Board</CreateTitle>\r\n\t\t\t\t<CreateInput\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={newBoardTitle}\r\n\t\t\t\t\tplaceholder={'Enter board name'}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t/>\r\n\t\t\t\t<CreateButton type=\"button submit\">Create</CreateButton>\r\n\t\t\t</form>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<HomeContainer>\r\n\t\t\t<CreateTitle>Saved Boards</CreateTitle>\r\n\t\t\t<Thumbnails>{renderAllBoards()}</Thumbnails>\r\n\t\t\t{renderCreateNewBoard()}\r\n\t\t</HomeContainer>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tboards: state.boards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './anime.css';\r\n\r\nclass Navbar extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"fixed-top navbar-dark\">\r\n\t\t\t\t<div className=\"row my-3\">\r\n\t\t\t\t\t<div className=\"col-4 text-left\"></div>\r\n\t\t\t\t\t<div className=\"col-4 text-center\">\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\tclassName=\"text-white gh1\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'black',\r\n\t\t\t\t\t\t\t\tboxShadow: '0px 0px 5px #fff',\r\n\t\t\t\t\t\t\t\ttextDecoration: 'none',\r\n\t\t\t\t\t\t\t\tborderRadius: '8px',\r\n\t\t\t\t\t\t\t\tpadding: '7px',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\thref=\"#\">\r\n\t\t\t\t\t\t\tK A N B A N I Z E\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tboards: state.boards,\r\n\tcurrentBoard: state.currentBoard,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport KKBoard from './kkBoard';\r\nimport Home from './home';\r\nimport Navbar from './navbar';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tminHeight: '100vh',\r\n\t\t\t\t\tminWidth: '100%',\r\n\t\t\t\t\toverflowY: 'auto',\r\n\t\t\t\t\toverflowX: 'auto',\r\n\t\t\t\t\tbackground: 'linear-gradient(45deg, #0B0C10, #1F2833)',\r\n\t\t\t\t\tpadding: '15px',\r\n\t\t\t\t}}>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<div style={{ marginTop: '60px' }}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/boards/:boardID\" component={KKBoard} />\r\n\t\t\t\t\t\t<Route path=\"/home\" component={Home} />\r\n\t\t\t\t\t\t<Redirect from=\"/\" to=\"/home\" />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"board-00\": {\r\n    id: \"board-00\",\r\n    lists: [\"list-00\"],\r\n    boardTitle: \"dev board\",\r\n  },\r\n};\r\n\r\nconst boardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_BOARD: {\r\n      const { boardTitle, boardID } = action.payload;\r\n      const newBoard = {\r\n        boardID,\r\n        boardTitle,\r\n        lists: [],\r\n      };\r\n      return { ...state, [boardID]: newBoard };\r\n    }\r\n\r\n    //TODO: case CONSTANTS.DELETE_BOARD:\r\n    case CONSTANTS.DELETE_BOARD: {\r\n      const { boardID } = action.payload;\r\n      // console.log(\"Board Reducer: DELETE_BOARD:\", boardID);\r\n      const boards = { ...state };\r\n      delete boards[boardID];\r\n      return boards;\r\n    }\r\n\r\n    // rename board\r\n\r\n    case CONSTANTS.ADD_LIST: {\r\n      const { boardID, listID } = action.payload;\r\n      const board = state[boardID];\r\n      board.lists.push(listID);\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { boardID, listID } = action.payload;\r\n      // console.log(\"Board Reducer: delete list: \", listID, boardID);\r\n      const board = state[boardID];\r\n      const newLists = board.lists.filter((id) => id != listID);\r\n      board.lists = newLists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const {\r\n        boardID,\r\n        type,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n      } = action.payload;\r\n      if (type !== \"list\") return state;\r\n      const board = state[boardID];\r\n      const lists = board.lists;\r\n      const draggedList = lists.splice(droppableIndexStart, 1);\r\n      lists.splice(droppableIndexEnd, 0, ...draggedList);\r\n      board.lists = lists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst currentBoardReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.SET_CURRENT_BOARD: {\r\n      return action.payload;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentBoardReducer;\r\n","import { CONSTANTS } from \"./../actions/index\";\r\n\r\nlet listID = 2,\r\n  cardID = 6;\r\n\r\nconst initialState = {\r\n  \"list-00\": {\r\n    listID: \"list-00\",\r\n    cards: [\"card-00\"],\r\n    listTitle: \"myList\",\r\n    boardID: \"board-00\",\r\n  },\r\n};\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST: {\r\n      const { listTitle, listID, boardID } = action.payload;\r\n      const newList = {\r\n        listTitle,\r\n        listID,\r\n        cards: [],\r\n        boardID,\r\n      };\r\n      return { ...state, [listID]: newList };\r\n    }\r\n\r\n    case CONSTANTS.EDIT_LIST_TITLE: {\r\n      const { listID, newListTitle } = action.payload;\r\n      const list = state[listID];\r\n      list.title = newListTitle;\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listID, boardID } = action.payload;\r\n      // console.log(\"ListReducer: delete list: \", listID);\r\n      const newState = state;\r\n      delete newState[listID];\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const { listID, cardID } = action.payload;\r\n      const list = state[listID];\r\n      list.cards.push(cardID);\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { cardID, listID } = action.payload;\r\n      const list = state[listID];\r\n      const newCards = list.cards.filter((id) => id !== cardID);\r\n      list.cards = newCards;\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type,\r\n      } = action.payload;\r\n\r\n      if (type === \"list\") {\r\n        return state;\r\n      }\r\n\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state[droppableIdStart];\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return { ...state, [droppableIdStart]: list };\r\n      } else {\r\n        const startList = state[droppableIdStart];\r\n        const card = startList.cards.splice(droppableIndexStart, 1);\r\n        const endList = state[droppableIdEnd];\r\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return {\r\n          ...state,\r\n          [droppableIdStart]: startList,\r\n          [droppableIdEnd]: endList,\r\n        };\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"card-00\": {\r\n    text: \"Dev Card\",\r\n    id: \"card-00\",\r\n    listID: \"list-00\",\r\n  },\r\n};\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_CARD: {\r\n      const { text, listID, cardID } = action.payload;\r\n      const newCard = {\r\n        text,\r\n        cardID,\r\n        listID,\r\n      };\r\n      return { ...state, [cardID]: newCard };\r\n    }\r\n\r\n    case CONSTANTS.EDIT_CARD: {\r\n      const { cardID, newText } = action.payload;\r\n      const card = state[cardID];\r\n      card.text = newText;\r\n      return { ...state, [cardID]: card };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { cardID } = action.payload;\r\n      const newState = state;\r\n      delete newState[cardID];\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport boardReducer from \"./boardReducer\";\r\nimport currentBoardReducer from \"./currentBoardReducer\";\r\nimport listReducer from \"./listReducer\";\r\nimport cardReducer from \"./cardReducer\";\r\n\r\nexport default combineReducers({\r\n  boards: boardReducer,\r\n  currentBoard: currentBoardReducer,\r\n  lists: listReducer,\r\n  cards: cardReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"kajkamkey\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Store from \"./store\";\r\nimport \"./index.css\";\r\nimport $ from \"jquery\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst { persistor, store } = Store();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n$(document).bind(\"DOMNodeRemoved\", function (e) {\r\n  console.log(\"Removed: \", e.target.title.nodeName);\r\n});\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}